<Window x:Class="CustomRoutedCommand.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CustomRoutedCommand" d:DataContext="{d:DesignInstance Type=local:MainWindowVM}"
        mc:Ignorable="d"
        MouseUp="Window_MouseUp"
        Title="MainWindow" Name="RootWindow" Height="500" Width="600"
        Focusable="True">
    <Window.DataContext>
        <local:MainWindowVM x:Name="vm"></local:MainWindowVM>
    </Window.DataContext>
    <Window.Resources>
        <!-- One style for each *type* of control on the window -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <local:ItemsSwitchConverter x:Key="ItemsSwitchConverter" />
        <local:ItemsSwitchConverter2 x:Key="ItemsSwitchConverter2" />
    </Window.Resources>
    <Grid ShowGridLines="True">
        <Grid.CommandBindings>
            <CommandBinding Command="{x:Static local:MainWindow.ColorCmd}"
                    Executed="ColorCmdExecuted"
                    CanExecute="ColorCmdCanExecute"/>
        </Grid.CommandBindings>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="4*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0">

            <Button Command="{x:Static local:MainWindow.ColorCmd}" 
                CommandParameter="param0"
                x:Name="button0" Focusable="True" Content="Button0" >
            </Button>
            <Button Command="{x:Static local:MainWindow.ColorCmd}" 
                CommandParameter="param1" 
                x:Name="button0_Copy" Focusable="True" Content="Button0" />

            <Button MinHeight="20" x:Name="button00" Focusable="True" Visibility="{Binding Propstring2}" Content="{Binding Propstring}" />


            <Button x:Name="button01" Focusable="True" Content="Commut"
                Click="button01_Click"
                />
            <Button Margin="5" x:Name="button02_Copy"  Focusable="True" Content="Mask"
            Click="button02_Click"
                />
            <TextBox  TextWrapping="Wrap" Text="{Binding Propstring3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="{Binding Propstring3, Mode=OneWay}"/>

        </StackPanel>


        <StackPanel Grid.Column="0" Grid.Row="1">
            <Button Name="button_sw" Focusable="True" Content="switch"
                Click="button_sw_Click"/>
            <Label Margin="0" Name="label1" Visibility="{Binding VisibilitySwitchs[0]}" Content="{Binding OStringItems[0]}"/>
            <Label Margin="0" Name="label2" Visibility="{Binding VisibilitySwitchs[1]}" Content="label_2"/>
            <Label Margin="0" Name="label3" Visibility="{Binding VisibilitySwitchs[1]}" Content="label_3"/>
            
            <!--<Label Margin="0" Name="label4"  Content="{Binding ItemsSwitch, Converter={StaticResource ItemsSwitchConverter},ConverterParameter=m_Dossiers}"/>
            <Label Margin="0" Name="label5"  Content="{Binding ItemsSwitch, Converter={StaticResource ItemsSwitchConverter},ConverterParameter=sm_Support}"/>-->

            <Label Margin="0" Name="label4" Content="label_4" 
                   Visibility="{Binding ItemsSwitch, Converter={StaticResource ItemsSwitchConverter2},ConverterParameter=m_Dossiers}"/>
            <Label Margin="0" Name="label5" Content="label_5" 
                   Visibility="{Binding ItemsSwitch, Converter={StaticResource ItemsSwitchConverter},ConverterParameter=sm_Support}"/>

            <Label Margin="0" Name="label6"  Content="label_6"/>
        </StackPanel>

        <DockPanel Grid.Column="1">
            <Menu DockPanel.Dock="Top"
          Height="25">
                <MenuItem Header="Commands">
                    <MenuItem Name="menuitem1" Header="Color Command"
                  Command="{x:Static local:MainWindow.ColorCmd}" />
                </MenuItem>
            </Menu>
            <Border BorderBrush="Black" BorderThickness="1" Margin="10"
            Height="100" Width="100" DockPanel.Dock="Top">
                <TextBlock TextWrapping="Wrap" Margin="3" Name="TextBlock1" Focusable="True">
                The Color Command chages the background color of a StackPanel.
                <LineBreak/>
                <LineBreak/>
                In order for the command attached to the MenuItem to be enabled, the
                StackPanel must have keyboard focus.  Use the TAB key to change focus.
                <LineBreak/>
                <LineBreak/>
                Since the command attached to the Button has the CommandTarget
                set to the first StackPanel, the StackPanel does not need focus.
                <LineBreak/>
                </TextBlock>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" Margin="10"
              Height="100" Width="100">
                <StackPanel Name="FirstStackPanel"
                    Background="AliceBlue"
                    Focusable="True">
                    <!--<StackPanel.CommandBindings>            
                        <CommandBinding Command="{x:Static local:MainWindow.ColorCmd}"
                            Executed="ColorCmdExecuted"
                            CanExecute="ColorCmdCanExecute"/>
                    </StackPanel.CommandBindings>-->

                    <Label>First StackPanel</Label>

                    <Button Command="{x:Static local:MainWindow.ColorCmd}"
                  CommandParameter="ButtonOne"
                  CommandTarget="{Binding ElementName=FirstStackPanel}" 
                  Content="CommandTarget = FristStackPanel" />
                </StackPanel>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" Margin="10"
              Height="100" Width="100">
                <StackPanel Name="stackpanel2" Background="AliceBlue" Focusable="True">
                    <Label>Second StackPanel</Label>
                </StackPanel>
            </Border>
            <Label Content="Label" Width="0"/>

        </DockPanel>
        <StackPanel Grid.Column="2">
            <Button x:Name="button2" Command="{x:Static local:MainWindow.ColorCmd}" Focusable="True" Content="Button2" MaxHeight="20"  MaxWidth="100">
            </Button>
            <Button x:Name="button20" Command="{x:Static local:MainWindow.Command2}" Focusable="True" Content="Command2" MaxHeight="20"  MaxWidth="100">
            </Button>
            <Button x:Name="button3" Command="{x:Static local:MainWindow.ColorCmd}" Focusable="True" Content="ButtonFire" MaxHeight="20"  MaxWidth="100">
                <Button.CommandBindings>
                    <CommandBinding Command="{x:Static local:MainWindow.ColorCmd}"
                    Executed="ColorCmdExecuted3"
                    CanExecute="ColorCmdCanExecute3"/>
                </Button.CommandBindings>
            </Button>
            <StackPanel.CommandBindings>
                <CommandBinding Command="{x:Static local:MainWindow.ColorCmd}"
                            Executed="ColorCmdExecuted20"
                            CanExecute="ColorCmdCanExecute20"/>
                <CommandBinding Command="{x:Static local:MainWindow.Command2}"
                            Executed="Command2Executed"
                            CanExecute="Command2CanExecute"/>
            </StackPanel.CommandBindings>
        </StackPanel>
        <!--<ListBox Grid.Column="1" Grid.Row="1" d:ItemsSource="{d:SampleData ItemCount=5}"/>-->
        <!--<ListBox Name="listbox1" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding ObservableItems}"  >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid ShowGridLines="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Title}" />
                        <TextBlock Grid.Column="1"  Text="{Binding Completion}" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->
        <ListView Name="lvUsers" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding ObservableItems}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Title" Width="Auto" DisplayMemberBinding="{Binding Title}" />
                    <GridViewColumn Header="Completion" Width="Auto" DisplayMemberBinding="{Binding Completion}" />
                </GridView>
            </ListView.View>
        </ListView>

        <!--listview avec datatemplate-->
        <!--<ListView.ItemTemplate>
            <DataTemplate>
                <StackPanel>
                    <TextBlock Text="{Binding Path= FileName, Mode=TwoWay}"></TextBlock>
                    <TextBlock Text="{Binding Path= DataType, Mode=TwoWay}"></TextBlock>
                </StackPanel>
            </DataTemplate>
        </ListView.ItemTemplate>-->





    </Grid>
</Window>
